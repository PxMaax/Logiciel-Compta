name: Auto Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write

jobs:
  checkCommitName:
    runs-on: ubuntu-latest
    outputs:
      should_run_build: ${{ steps.commit_filter.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      
# Etape pour vérifier le message de commit
      - name: Check Commit Message for 'nouvelle version'
        id: commit_filter
        run: |
          echo "Checking for 'nouvelle version' in the commit message..."
          if git log -1 --pretty=%B | grep -iq "nouvelle version"; then
            echo "::set-output name=should_run::true"
          else
            echo "::set-output name=should_run::false"
          fi


  build-and-release:
    needs: checkCommitName
    if: needs.format-and-check.outputs.should_run_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Configuration de l'environnement Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'

      # Installation des dépendances Python
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Construction de l'exécutable avec PyInstaller
      - name: Build Application
        run: pyinstaller --onefile main.py

      # Archivage de l'exécutable
      - name: Archive Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Logiciel Feuilles de caisses 
          path: dist/

      # Génération d'un tag basé sur la date et l'heure
      - name: Generate Tag
        id: generate_tag
        run: echo "::set-output name=tag::$(date +'%Y%m%d%H%M%S')"

      # Création de la release GitHub avec l'exécutable
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_tag.outputs.tag }}
          release_name: Release ${{ steps.generate_tag.outputs.tag }}
          body: "Description of the release"
          draft: false
          prerelease: false
